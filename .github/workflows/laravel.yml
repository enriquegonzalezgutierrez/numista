# .github/workflows/laravel.yml

name: Laravel CI/CD

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # --- JOB 1: LINTING (Static Analysis) ---
  lint:
    name: Check Code Style (Pint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2
        id: setup-php # ID for referencing outputs

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup-php.outputs.composer-cache-directory }} # Correct dynamic path
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Laravel Pint
        run: ./vendor/bin/pint --test

  # --- JOB 2: TESTING (Unit & Feature Tests) ---
  tests:
    name: Run PHPUnit/Pest Tests
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_pgsql, pdo_sqlite, zip, intl, gd
        id: setup-php # ID for referencing outputs
          
      - name: Copy .env file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup-php.outputs.composer-cache-directory }} # Correct dynamic path
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate app key
        run: php artisan key:generate

      - name: Execute tests (Pest)
        run: php artisan test
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ':memory:'

  # --- JOB 3: BUILD FRONTEND ASSETS ---
  build:
    name: Build Frontend Assets
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NPM dependencies
        run: npm install

      - name: Build assets
        run: npm run build